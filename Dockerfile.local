# Simplified Dockerfile for local testing
FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    FLASK_APP=foody.py \
    FLASK_ENV=development

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r foody && useradd -r -g foody foody

# Create application directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --upgrade pip && \
    pip install -r requirements.txt && \
    pip install gunicorn[gevent] pymysql cryptography

# Copy application files
COPY --chown=foody:foody app app
COPY --chown=foody:foody migrations migrations
COPY --chown=foody:foody foody.py config.py boot.sh ./
COPY --chown=foody:foody babel.cfg ./

# Make boot script executable
RUN chmod +x boot.sh

# Compile translations
RUN flask translate compile

# Create logs directory
RUN mkdir -p /app/logs && chown -R foody:foody /app/logs

# Switch to non-root user
USER foody

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Expose port
EXPOSE 5000

# Start application
ENTRYPOINT ["./boot.sh"]
